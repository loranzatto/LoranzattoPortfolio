<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutImplementation" xml:space="preserve">
    <value>Implemented Projects</value>
  </data>
  <data name="AboutImplementationDetails" xml:space="preserve">
    <value>New Sales Order System \n
- New system to migrate the old Sales System from VB6 to C# improving the sales force in whole sales process; \n
Technologies: C#, MVC, WinForms, Linq to SQL, SQL Server 2015 \n \n

SAP-QM and MES System Startup Project \n
- Acting as a Key User to implement these systems in a Startup project in a huge steel industry; \n
Technologies: SAP QM, Java, PL-SQL \n \n

SAP-PP-QM-PM System Startup Project \n
- Acting as a SAP Functional Analyst to implement these systems in a Startup project in a huge steel industry; \n
Technologies: SAP PP-QM-PM, ABAP, SQL Server 2015 \n \n

New MES System Startup project \n
- Acting as a Lead Developer in a project to create a new Manufacturing Execution System in a huge steel industry; \n
Technologies: VB6, SQL Server 2008 \n
 </value>
  </data>
  <data name="AboutMe" xml:space="preserve">
    <value>I'm Wagner Costa Loranzatto, Brazilian, graduated in System and Development Analysis with over 10 years of experience in IT area. </value>
  </data>
  <data name="AboutMyLinkedin" xml:space="preserve">
    <value>If you want to know more about my career and professional skills and endorsments please access my Linkedin profile through the link below:</value>
  </data>
  <data name="AboutMyUniversity" xml:space="preserve">
    <value>Follow below more details about what i did in my career and which were the tecnologies that I worked</value>
  </data>
  <data name="AboutSummary" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="AboutSummaryDetails" xml:space="preserve">
    <value>• Over 10 years of experience in Developing and System Analysis \n
• Strong background in system analysis and how to increase the development \n
• Proven skills in how to analyze and to specify a system \n
• Demonstrated ability to work under pressure \n
• Professional communication skills include intermediate in English, facility to talk with my co-workers, used to making presentations and facility to get requirements with the end user \n
• Developing skills include: \n	
      - VB6 (+8 Years) \n
      - C# (+3 Years) \n
      - ASP.NET MVC (+2 Years) \n
      - SQL Server – Programming and Tuning Skills (+8 Years) \n
      - Excel VBA Programming (+2 Years) </value>
  </data>
  <data name="AboutTitle" xml:space="preserve">
    <value>About Me</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>Loranzatto's Portfolio</value>
  </data>
  <data name="ContactInitialMessage" xml:space="preserve">
    <value>I`m waiting anciously for your message</value>
  </data>
  <data name="IndexHeader" xml:space="preserve">
    <value>C# Professional Developer</value>
  </data>
  <data name="IndexHeaderDetail" xml:space="preserve">
    <value>Developer with 10 years of experience in IT area, developing Web and Desktop applications in C#, VB6 and Java languages</value>
  </data>
  <data name="InsertError" xml:space="preserve">
    <value>Insert Operation Can't Executed!</value>
  </data>
  <data name="SeeMore" xml:space="preserve">
    <value>Find Out More</value>
  </data>
  <data name="SuccessMessage" xml:space="preserve">
    <value>Message Sent with Success !</value>
  </data>
</root>